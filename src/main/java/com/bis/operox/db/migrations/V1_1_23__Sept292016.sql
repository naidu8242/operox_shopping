
CALL operox.AlterTableRemoveColumn('operox','RECEIVED_STOCK_ITEMS','TAX');

CALL operox.AlterTableAddColumn ('operox','RECEIVED_STOCK_ITEMS','TAX_ID','BIGINT NULL AFTER `STATUS`');
ALTER TABLE `operox`.`RECEIVED_STOCK_ITEMS`  ADD FOREIGN KEY(TAX_ID) REFERENCES `TAX`(ID);

ALTER TABLE `operox`.`STOCK_RETURNS`
CHANGE COLUMN `UPDATED_BY` `UPDATED_BY` VARCHAR(100) NULL DEFAULT NULL ;


ALTER TABLE `operox`.`STOCK_RETURNS`
CHANGE COLUMN `CREATED_BY` `CREATED_BY` VARCHAR(100) NULL DEFAULT NULL ;

ALTER TABLE `operox`.`STOCK_RETURNS_ITEMS`
CHANGE COLUMN `CREATED_BY` `CREATED_BY` VARCHAR(100) NULL DEFAULT NULL ;

ALTER TABLE `operox`.`STOCK_RETURNS_ITEMS`
CHANGE COLUMN `UPDATED_BY` `UPDATED_BY` VARCHAR(100) NULL DEFAULT NULL ;

DROP TABLE IF EXISTS `operox`.`ACCOUNT_PAYABLE`;
CREATE TABLE `operox`.`ACCOUNT_PAYABLE` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  SUPPLIER_INVOICE_ID BIGINT,
  PAYMENT_STATUS  VARCHAR(50),
  PAYMENT_MODE  VARCHAR(50),
  DATE_OF_PAY DATE,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(SUPPLIER_INVOICE_ID) REFERENCES `operox`.`SUPPLIER_INVOICES`(ID),
  PRIMARY KEY (`ID`) 
); 


CALL operox.AlterTableAddColumn ('operox','RECEIVED_STOCK_ITEMS','BAR_CODE','VARCHAR(500) DEFAULT NULL AFTER `STATUS`');