
DROP TABLE IF EXISTS `operox`.`ADDRESS`;
CREATE TABLE `operox`.`ADDRESS` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  COUNTRY VARCHAR(500) DEFAULT NULL,
  STATE VARCHAR(500) DEFAULT NULL,
  CITY VARCHAR(500) DEFAULT NULL,
  ZIPCODE VARCHAR(20) DEFAULT NULL,
  ADDRESS TEXT DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`COMPANY`;
CREATE TABLE `operox`.`COMPANY` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  COMPANY_NAME VARCHAR(500) DEFAULT NULL,
  ADDRESS_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(ADDRESS_ID) REFERENCES `operox`.`ADDRESS`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`STORE`;
CREATE TABLE `operox`.`STORE` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  STORE_NAME VARCHAR(500) DEFAULT NULL,
  STORE_TYPE VARCHAR(100),
  COMPANY_ID BIGINT,
  ADDRESS_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(COMPANY_ID) REFERENCES `operox`.`COMPANY`(ID),
  FOREIGN KEY(ADDRESS_ID) REFERENCES `operox`.`ADDRESS`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`ROLE`;
CREATE TABLE `operox`.`ROLE` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  ROLE_NAME VARCHAR(100) DEFAULT NULL,
  DISPLAY_NAME VARCHAR(100),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`DEPARTMENT`;
CREATE TABLE `operox`.`DEPARTMENT` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  DEPARTMENT_NAME VARCHAR(500) DEFAULT NULL,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`USER`;
CREATE TABLE `operox`.`USER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  EMPLOYEE_ID VARCHAR(50) DEFAULT NULL,
  STORE_ID BIGINT,
  ADDRESS_ID BIGINT,
  ROLE_ID BIGINT,
  DEPARTMENT_ID BIGINT,
  FIRST_NAME VARCHAR(500) DEFAULT NULL,
  LAST_NAME VARCHAR(500) DEFAULT NULL,
  EMAIL VARCHAR(500) DEFAULT NULL,
  PHONE VARCHAR(50) DEFAULT NULL,
  USERNAME VARCHAR(500) DEFAULT NULL,
  PASSWORD VARCHAR(250) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  FOREIGN KEY(ADDRESS_ID) REFERENCES `operox`.`ADDRESS`(ID),
  FOREIGN KEY(ROLE_ID) REFERENCES `operox`.`ROLE`(ID),
  FOREIGN KEY(DEPARTMENT_ID) REFERENCES `operox`.`DEPARTMENT`(ID),
  
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`BRAND`;
CREATE TABLE `operox`.`BRAND` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  BRAND_NAME VARCHAR(500) DEFAULT NULL,
  CATEGORY_ID BIGINT,
  MANUFACTURED_BY VARCHAR(500) DEFAULT NULL,
  MARKETED_BY VARCHAR(500) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`CATEGORY`;
CREATE TABLE `operox`.`CATEGORY` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  CATEGORY_NAME VARCHAR(500) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`TAX`;
CREATE TABLE `operox`.`TAX` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  TAX_NAME VARCHAR(500) DEFAULT NULL,
  TAX_VALUE VARCHAR(500) DEFAULT NULL,
  STORE_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`PRODUCT`;
CREATE TABLE `operox`.`PRODUCT` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_NAME VARCHAR(500) DEFAULT NULL,
  PRODUCT_CODE VARCHAR(500) DEFAULT NULL,
  COMPANY_ID BIGINT,
  CATEGORY_ID BIGINT,
  MEASURING_UNIT VARCHAR(500) DEFAULT NULL,
  PRODUCT_IMAGE MEDIUMBLOB,
  FILE_CONTENT_TYPE VARCHAR(50),
  BRAND_ID BIGINT,
  MANUFACTURED_BY VARCHAR(500) DEFAULT NULL,
  MARKETED_BY VARCHAR(500) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(COMPANY_ID) REFERENCES `operox`.`COMPANY`(ID),
  FOREIGN KEY(CATEGORY_ID) REFERENCES `operox`.`CATEGORY`(ID),
  FOREIGN KEY(BRAND_ID) REFERENCES `operox`.`BRAND`(ID),
  PRIMARY KEY (`ID`) 
); 




DROP TABLE IF EXISTS `operox`.`CUSTOMER`;
CREATE TABLE `operox`.`CUSTOMER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  CUSTOMER_UID VARCHAR(50) DEFAULT NULL,
  CUSTOMER_NAME VARCHAR(500) DEFAULT NULL,
  PHONE VARCHAR(50) DEFAULT NULL,
  EMAIL VARCHAR(500) DEFAULT NULL,
  DOB DATE,
  ADDRESS_ID BIGINT,
  COMPANY_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(ADDRESS_ID) REFERENCES `operox`.`ADDRESS`(ID),
  FOREIGN KEY(COMPANY_ID) REFERENCES `operox`.`COMPANY`(ID),
  PRIMARY KEY (`ID`) 
); 




DROP TABLE IF EXISTS `operox`.`BILL`;
CREATE TABLE `operox`.`BILL` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  CUSTOMER_ID BIGINT,
  STORE_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(CUSTOMER_ID) REFERENCES `operox`.`CUSTOMER`(ID),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`OFFER`;
CREATE TABLE `operox`.`OFFER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  OFFER_TYPE VARCHAR(500),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`PRODUCT_STOCK`;
CREATE TABLE `operox`.`PRODUCT_STOCK` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_ID BIGINT,
  TAX_ID BIGINT,
  MANUFACTURING_DATE DATE,
  EXPIRE_DATE DATE,
  BATCH_NUMBER VARCHAR(500),
  STOCK_IN BIGINT DEFAULT NULL,
  STOCK_OUT BIGINT DEFAULT NULL,
  CURRENT_QUANTITY BIGINT DEFAULT NULL,
  BAR_CODE VARCHAR(500),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_ID) REFERENCES `operox`.`PRODUCT`(ID),
  FOREIGN KEY(TAX_ID) REFERENCES `operox`.`TAX`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`PRODUCT_STOCK_OFFER`;
CREATE TABLE `operox`.`PRODUCT_STOCK_OFFER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_STOCK_ID BIGINT,
  OFFER_ID BIGINT,
  OFFER_START_DATE DATE,
  OFFER_END_DATE DATE,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_STOCK_ID) REFERENCES `operox`.`PRODUCT_STOCK`(ID),
  FOREIGN KEY(OFFER_ID) REFERENCES `operox`.`OFFER`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`BILL_ITEMS`;
CREATE TABLE `operox`.`BILL_ITEMS` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  BILL_ID BIGINT,
  PRODUCT_ID BIGINT,
  PRODUCT_STOCK_OFFER_ID BIGINT,
  QUANTITY VARCHAR(100) DEFAULT NULL,
  PRICE VARCHAR(100) DEFAULT NULL,
  CURRENCY VARCHAR(20) DEFAULT NULL,
  STATUS INT,
  CREATED_BY VARCHAR(10),
  CREATED_DATE DATE,
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(BILL_ID) REFERENCES `operox`.`BILL`(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES `operox`.`PRODUCT`(ID),
  FOREIGN KEY(PRODUCT_STOCK_OFFER_ID) REFERENCES `operox`.`PRODUCT_STOCK_OFFER`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`CUSTOMER_OFFER`;
CREATE TABLE `operox`.`CUSTOMER_OFFER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  OFFER_ID BIGINT,
  STORE_ID BIGINT,
  OFFER_VALUE VARCHAR(100) DEFAULT NULL,
  CURRENCY VARCHAR(20) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(OFFER_ID) REFERENCES `operox`.`OFFER`(ID),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`SUPPLIER`;
CREATE TABLE `operox`.`SUPPLIER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  SUPPLIER_UID VARCHAR(50) DEFAULT NULL,
  SUPPLIER_NAME VARCHAR(500) DEFAULT NULL,
  ADDRESS_ID BIGINT,
  EMAIL VARCHAR(500) DEFAULT NULL,
  SUPPLIER_CONATCT_NAME VARCHAR(500) DEFAULT NULL,
  SUPPLIER_CONATCT_EMAIL VARCHAR(500) DEFAULT NULL,
  SUPPLIER_CONATCT_PHONE VARCHAR(50) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(ADDRESS_ID) REFERENCES `operox`.`ADDRESS`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`STOCK_RETURNS`;
CREATE TABLE `operox`.`STOCK_RETURNS` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_STOCK_ID BIGINT,
  RETURN_TO BIGINT,
  RETURN_FROM BIGINT,
  RETURN_TYPE VARCHAR(100) DEFAULT NULL,
  CUSTOMER_ID BIGINT,
  SUPPLIER_ID BIGINT,
  RETURN_REASON TEXT DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATETIME,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_STOCK_ID) REFERENCES `operox`.`PRODUCT_STOCK`(ID),
  FOREIGN KEY(RETURN_TO) REFERENCES `operox`.`STORE`(ID),
  FOREIGN KEY(RETURN_FROM) REFERENCES `operox`.`STORE`(ID),
  FOREIGN KEY(CUSTOMER_ID) REFERENCES `operox`.`CUSTOMER`(ID),
  FOREIGN KEY(SUPPLIER_ID) REFERENCES `operox`.`SUPPLIER`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`SUPPLIER_INVOICES`;
CREATE TABLE `operox`.`SUPPLIER_INVOICES` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_ID BIGINT,
  SUPPLIER_ID BIGINT,
  STORE_ID BIGINT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_ID) REFERENCES `operox`.`PRODUCT`(ID),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  FOREIGN KEY(SUPPLIER_ID) REFERENCES `operox`.`SUPPLIER`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`PRICE`;
CREATE TABLE `operox`.`PRICE` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_STOCK_ID BIGINT,
  MRP VARCHAR(100) DEFAULT NULL,
  SUPPLIER_PRICE VARCHAR(100) DEFAULT NULL,
  WAREHOUSE_PRICE VARCHAR(100) DEFAULT NULL,
  STORE_PRICE VARCHAR(100) DEFAULT NULL,
  CURRANCY VARCHAR(50) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_STOCK_ID) REFERENCES `operox`.`PRODUCT_STOCK`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`PURCHASE_ORDER`;
CREATE TABLE `operox`.`PURCHASE_ORDER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  SUPPLIER_ID BIGINT,
  STORE_ID BIGINT,
  ORDER_DATE DATE,
  DELIVERY_DATE DATE,
  ORDER_STATUS VARCHAR(50),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(SUPPLIER_ID) REFERENCES `operox`.`SUPPLIER`(ID),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`PURCHASE_ORDER_ITEMS`;
CREATE TABLE `operox`.`PURCHASE_ORDER_ITEMS` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  PRODUCT_ID BIGINT,
  PURCHASE_ORDER_ID BIGINT,
  QUANTITY VARCHAR(100),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(PRODUCT_ID) REFERENCES `operox`.`PRODUCT`(ID),
  FOREIGN KEY(PURCHASE_ORDER_ID) REFERENCES `operox`.`PURCHASE_ORDER`(ID),
  PRIMARY KEY (`ID`) 
); 



CALL operox.AlterTableAddColumn ('operox','CATEGORY','PARENT_CATEGORY_ID','BIGINT NULL AFTER `CATEGORY_NAME`');
ALTER TABLE `operox`.`CATEGORY`  ADD FOREIGN KEY(PARENT_CATEGORY_ID) REFERENCES CATEGORY(ID);




