DROP TABLE IF EXISTS `operox`.`RAW_MATERIAL`;
CREATE TABLE `operox`.`RAW_MATERIAL` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  STORE_ID BIGINT,
  MATERIAL_NAME VARCHAR(500) DEFAULT NULL,
  SEARCH_CODE VARCHAR(500) DEFAULT NULL,
  UNIT_PRICE VARCHAR(50),
  DISCOUNT VARCHAR(50),
  ANNUAL_ORDER_QTY INT,
  AVALIABLE_INVENTORY VARCHAR(50),
  MEASURING_UNIT VARCHAR(50),
  DESCRIPTION TEXT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`WORK_ORDER`;
CREATE TABLE `operox`.`WORK_ORDER` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_NUMBER VARCHAR(250) DEFAULT NULL,
  CUSTOMER_ID BIGINT,
  STORE_ID BIGINT,
  ORDER_DATE DATE,
  DUE_DATE DATE,
  DESPATCHED_ON_DATE DATE,
  APPROVED_USER_ID BIGINT,
  WORK_ORDER_STATUS VARCHAR(50),
  COMMANTS TEXT,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(CUSTOMER_ID) REFERENCES `operox`.`CUSTOMER`(ID),
  FOREIGN KEY(STORE_ID) REFERENCES `operox`.`STORE`(ID),
  FOREIGN KEY(APPROVED_USER_ID) REFERENCES `operox`.`USER`(ID),
  PRIMARY KEY (`ID`) 
); 




DROP TABLE IF EXISTS `operox`.`WORK_ORDER_ITEMS`;
CREATE TABLE `operox`.`WORK_ORDER_ITEMS` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_ID BIGINT,
  SL_NO VARCHAR(250) DEFAULT NULL,
  PRODUCT_ID BIGINT,
  PRODUCT_NAME VARCHAR(250) DEFAULT NULL,
  BATCH_ID VARCHAR(250) DEFAULT NULL,
  TOTAL_QTY INT DEFAULT NULL,
  QTY_WAITING_FOR_QC INT DEFAULT NULL,
  WORK_ORDER_ITEM_STATUS VARCHAR(100) DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(WORK_ORDER_ID) REFERENCES `operox`.`WORK_ORDER`(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES `operox`.`PRODUCT`(ID),
  PRIMARY KEY (`ID`) 
); 





DROP TABLE IF EXISTS `operox`.`WORK_ORDER_RAW_MATERIAL`;
CREATE TABLE `operox`.`WORK_ORDER_RAW_MATERIAL` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_ITEMS_ID BIGINT,
  PRODUCT_NAME VARCHAR(250) DEFAULT NULL,
  RAW_MATERIAL_ID BIGINT,
  SUPPLIER_ID BIGINT,
  QUANTITY INT DEFAULT NULL,
  PRICE FLOAT DEFAULT NULL,
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(WORK_ORDER_ITEMS_ID) REFERENCES `operox`.`WORK_ORDER_ITEMS`(ID),
  FOREIGN KEY(RAW_MATERIAL_ID) REFERENCES `operox`.`RAW_MATERIAL`(ID),
  FOREIGN KEY(SUPPLIER_ID) REFERENCES `operox`.`SUPPLIER`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`WORK_ORDER_RESOURCE_MANAGEMENT`;
CREATE TABLE `operox`.`WORK_ORDER_RESOURCE_MANAGEMENT` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_ID BIGINT,
  RESOURCE_USER_ID BIGINT,
  RESOURCE_NAME VARCHAR(250) DEFAULT NULL,
  START_DATE DATE,
  END_DATE DATE,
  TOTAL_HOURS VARCHAR(20),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(WORK_ORDER_ID) REFERENCES `operox`.`WORK_ORDER`(ID),
  FOREIGN KEY(RESOURCE_USER_ID) REFERENCES `operox`.`USER`(ID),
  PRIMARY KEY (`ID`) 
); 


DROP TABLE IF EXISTS `operox`.`WORK_ORDER_MACHINERY_MANAGEMENT`;
CREATE TABLE `operox`.`WORK_ORDER_MACHINERY_MANAGEMENT` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_ID BIGINT,
  MACHINERY_ID VARCHAR(250) DEFAULT NULL,
  MACHINERY_NAME VARCHAR(250) DEFAULT NULL,
  START_DATE DATE,
  END_DATE DATE,
  TOTAL_HOURS VARCHAR(20),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(WORK_ORDER_ID) REFERENCES `operox`.`WORK_ORDER`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`QC_CHECK_LIST`;
CREATE TABLE `operox`.`QC_CHECK_LIST` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  WORK_ORDER_ID BIGINT,
  RAW_MATERIAL_ID BIGINT,
  WHAT_TO_CHECK TEXT,
  HOW_TO_CHECK TEXT,
  IS_CHECKED VARCHAR(10),
  CHECK_LIST_TYPE VARCHAR(50),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(WORK_ORDER_ID) REFERENCES `operox`.`WORK_ORDER`(ID),
  FOREIGN KEY(RAW_MATERIAL_ID) REFERENCES `operox`.`RAW_MATERIAL`(ID),
  PRIMARY KEY (`ID`) 
); 



DROP TABLE IF EXISTS `operox`.`QC_CHECK_LIST_REPORT`;
CREATE TABLE `operox`.`QC_CHECK_LIST_REPORT` (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  QC_CHECK_LIST_ID BIGINT,
  IS_CHECKED VARCHAR(10),
  TOTAL_UNITS INT,
  TOTAL_UNITS_PASSED INT,
  TOTAL_UNITS_FAILED INT,
  CHECKED_BY VARCHAR(10),
  STATUS INT,
  CREATED_DATE DATE,
  CREATED_BY VARCHAR(10),
  UPDATED_DATE DATE,
  UPDATED_BY VARCHAR(10),
  FOREIGN KEY(QC_CHECK_LIST_ID) REFERENCES `operox`.`QC_CHECK_LIST`(ID),
  PRIMARY KEY (`ID`) 
); 


